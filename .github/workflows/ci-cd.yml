name: React CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for SonarQube

      # Step 2: Setup Node.js with caching
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci # Use 'npm ci' instead of 'npm install' for CI

      # Step 4: Run tests with coverage
      - name: Run tests
        run: npm test -- --coverage --watchAll=false --coverageReporters=lcov

      # Step 5: SonarQube scan
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=react-cicd
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      # Step 6: Build React app
      - name: Build
        run: npm run build

      # Step 7: Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build Docker image with dynamic tags
      - name: Build Docker image
        run: |
          docker build -t venkateshsagar/rhello-k8s:${{ github.sha }} \
                       -t venkateshsagar/rhello-k8s:latest .

      # Step 9: Trivy Docker image scan
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: venkateshsagar/rhello-k8s:${{ github.sha }}
          format: table
          exit-code: 0 # Change to 1 for strict mode
          severity: HIGH,CRITICAL

      # Step 10: Push Docker image
      - name: Push Docker image
        run: |
          docker push venkateshsagar/rhello-k8s:${{ github.sha }}
          docker push venkateshsagar/rhello-k8s:latest
